++++++++++++++++++++++++++++++++++++GIT Learnings++++++++++++++++++++++++++++++++++++++++++++
a moment to generalize:
Git is the industry-standard version control system for web developers
=======================================================================
Git Vs Github
================================================
Git is the repo at your local system , while Github is the cenral server.
(If you are on a network you can upload/sync your git repo to github, so that others can you)
=============================================
Installing git in windows/Linux Machines
	sudo apt-get install git   or sudo yum install git
	http://git-scm.com/download/win
=======================
Setting your Git username for every repository on your computer
===============================================================
After git installation on you local configure the username & usermail which will identify indivisual.
git config --global user.name 'Bikram'
git config --global user.mail  'bikram.keshari.das@gmail.com'
The above configuration is located at C:\Users\bdas.gitconfig
=========================================================
Setting your Git username for a single repository
==================================================
git config user.name 'Bikram'
git config user.mail  'bikram.keshari.das@gmail.com'
==========================
How to show your Git username
=============================
git config user.name
git config --list   (It will give overall summary)
========================================Syncing your LOCAL git to remote github===========================
HTTPS
https://github.com/bikranz4u/beginners-bash.git
-------------------SSH------------------------
git@github.com:bikranz4u/beginners-bash.git
bikranz4u
bkd.aul5017
------------------------------
First time configuration
git remote add origin git@github.com:bikranz4u/beginners-bash.git (It needs ssh authentication on both git and github)
git push -u origin master  (Provide your github credential)
(or)
git remote add origin https://github.com/bikranz4u/beginners-bash.git 
git push -u origin master  (Provide your github credential)

Now create a new file in your local git..add to stage & commit....then push this new file to github
git push (Bingoo the new file is updated in github)
Once the above steps done all your local repo will be copied to remote github

To Get latest version of repo available in github
git pull
========================================Clone a remote repo  to local git===========================
To get clone any repository from github to local system (git)

git clone https://github.com/bikranz4u/beginners-bash.git   (It will create a complete folder what ever exist in github repository)
======================================
	git diff shows the difference between the working directory and the staging area
	git log shows a list of all previous commits

++++++++++++++++++++++++++++++++++++==========================++++++++++++++++++++++++++++++++++++++++++++
#To initialize git use below command ,creates a new Git repository
git init
while initialize the new folder git will treat it as 'master'
#How to add a file to be tracked , ( I mean for staging),adds files from the working directory to the staging area
git add index.html (it will track the single file)
git add *.html (it will add all html files located in that folder)
git add . (it will add all files in that folder)
#How to remove files from staging (I mean unstage)
git rm --cached index.html
#Now to check the status of any tracked file ,inspects the contents of the working directory and staging area
git status
#if the files are being tracked by git or recently changed .you need to add that to staging.
git add <Filename>
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)
  (use "git rm --cached <file>..." to unstage)
# How to commit the changes made to the file in git repository,permanently stores file changes from the staging area in the repository
git commit   (It will open the file in vi, user need to put comments manually)
git commit -m "My first GIT commit"
#How to ignore a file/files/folders (Not to be tracked by git)
Create a file '.gitignore' under your repository directory
#How to create a BRANCH
git branch mybranch
#How to navigate to a branch
git checkout mybranch
create a file to test something ..add to that to git & commit....
################################We are in Branch####################
#How to add branch changes to master
git merge mybranch
#How to push files from local repo (git) to remote github/bitbucket
git push
#How to pull files from  remote github/bitbucket to local repo (git).
git pull
#How to cpoy remote repository (github) to current folder(git folder)
git clone
#Often with Git, you'll need to refer back an earlier version of a project. Commits are stored chronologically in the repository and can be viewed with:
$git log
+++++++++++++++++++++++++++++Session 2++++++++++++++++++++++++++++++++++++++++++++
Add some changes to a file and commit the changes
In Git, the commit you are currently on is known as the HEAD commit. In many cases, the most recently made commit is the HEAD commit.
To see the HEAD commit, enter:
git show HEAD
diff --git a/scene-5.txt b/scene-5.txt
